@model IEnumerable<Youtube.Models.YoutubeResult>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h4>Pesquisar no youtube</h4>
</div>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.2/axios.min.js" integrity="sha256-T/f7Sju1ZfNNfBh7skWn0idlCBcI3RwdLSS4/I7NQKQ=" crossorigin="anonymous"></script>



<div id="app">
    <div v-if="loading" style="width: 100%; height: 100%; top: 0;left: 0; position:fixed; display:block; opacity:0.7; background-color:#fff; z-index:99; text-align:center;">
        <div class="spinner-border" role="status" style="position:absolute; top:50%; left:50%; z-index:100;">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <div class="row">
        <form class="form-inline">
            <div class="form-group mx-sm-3 mb-2">
                <label for="pesq" class="">Palavra chave </label>
                <input type="text" class="form-control" v-model="pesquisa">
            </div>
            <button type="button" @@click="Pesquisar()" class="btn btn-primary mb-2"> Pesquisar</button>
        </form>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Imagem
                </th>
                <th>
                    Tipo
                </th>
                <th>
                    Titulo
                </th>
                <th>
                    Publicado em
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="(item, key) in videos">
                <td>
                    <a v-if="item.type == 1" :href="'https://www.youtube.com/watch?v='+item.youtubeId" target="_blank"><img width="80" :src="item.thumbnails" /></a>
                    <img width="80" v-else :src="item.thumbnails" />
                </td>
                <td>
                    <span v-if="item.type == 0">Canal</span>
                    <span v-if="item.type == 1">Video</span>
                    <span v-if="item.type == 2">Playlist</span>
                </td>
                <td>
                    {{ item.title }}
                </td>
                <td>
                    {{ item.publishedAt }}
                </td>
                <td>
                    <a :href="'/Home/detalhes/?YoutubeId='+item.youtubeId+'&tipo='+item.type" class="btn btn-info">Detalhes</a>
                    <button @@click="AddItem(key, item.type,item.youtubeId)" class="btn btn-success">Adicionar a minha lista</button>
                </td>
            </tr>
        </tbody>
    </table>
</div>
<script>
    var app = new Vue({
        el: '#app',
        data() {
            return { videos: null, pesquisa: '', loading: false }
        },
        methods: {
            AddItem(key, tipo, youtubeId) {
                this.loading = true;
                $.post("/MeusItens/AddItem", { tipo: tipo, YoutubeId: youtubeId })
                    .done(function (data) {
                        swal({
                            icon: 'success',
                            title: 'Inserido com sucesso',
                            buttons: false,
                            timer: 1500
                        });
                    });
                this.videos.splice(key, 1);
                this.loading = false;
            },
            Pesquisar() {
                if (this.pesquisa != "") {
                    this.loading = true;
                    axios
                        .get('/Home/Pesquisar/?q=' + this.pesquisa)
                        .then(response => (this.videos = response.data));
                    this.loading = false;
                } else {                    
                    swal({
                        icon: 'warning',
                        title: 'Informe a palavra chave!',
                        timer: 2500
                    });
                }
            }
        }
    })
</script>
